{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blogTemplate.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","marginTop","Date","getFullYear","href","Template","markdownRemark","frontmatter","html","className","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"yJAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,QACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCWAY,IAtCA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVC,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQd,WAAW,UAAAa,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,yBACEhB,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,4BAAQX,MAAO,CACbiB,UAAU,SADZ,MAGK,IAAIC,MAAOC,cAHhB,mBAKE,uBAAGC,KAAK,4BAAR,e,kCCzCV,8HAIe,SAASC,EAAT,GAEX,IACKC,EADN,EADFV,KAEQU,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACC,kBAAC,IAAD,KACC,yBAAKC,UAAU,uBACd,yBAAKA,UAAU,aACd,4BAAKF,EAAYP,OACjB,4BAAKO,EAAYG,MACjB,yBACCD,UAAU,oBACVE,wBAAyB,CAAEC,OAAQJ,QAQlC,IAAMK,EAAS","file":"component---src-templates-blog-template-js-11f31702e812411ede77.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `black`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer style={{\n          marginTop: `2rem`\n        }}>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function Template({\n\tdata, // this prop will be injected by the GraphQL query below.\n}) {\n\tconst { markdownRemark } = data // data.markdownRemark holds your post data\n\tconst { frontmatter, html } = markdownRemark\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"blog-post-container\">\n\t\t\t\t<div className=\"blog-post\">\n\t\t\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t\t\t<h2>{frontmatter.date}</h2>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"blog-post-content\"\n\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}